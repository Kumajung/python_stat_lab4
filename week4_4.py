""" Example
р╕Щр╕▒р╕Бр╕зр╕┤р╕Ир╕▒р╕вр╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕зр╣Ир╕▓р╕нр╕▒р╕Хр╕гр╕▓р╕Фр╕нр╕Бр╣Ар╕Ър╕╡р╣Йр╕вр╣Ар╕Йр╕ер╕╡р╣Ир╕вр╕Вр╕нр╕Зр╣Ар╕Зр╕┤р╕Щр╕Эр╕▓р╕Бр╕Ыр╕гр╕░р╕Ир╕│ 1 р╕Ыр╕╡р╣Гр╕Щр╕Шр╕Щр╕▓р╕Др╕▓р╕гр╕гр╕░р╕Фр╕▒р╕Ър╕Ыр╕гр╕░р╣Ар╕Чр╕и р╕бр╕▓р╕Бр╕Бр╕зр╣Ир╕▓ 3.5% р╕Хр╣Ир╕нр╕Ыр╕╡ 
р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Шр╕Щр╕▓р╕Др╕▓р╕г 25 р╣Бр╕лр╣Ир╕Зр╕Чр╕╡р╣Ир╣Ар╕ер╕╖р╕нр╕Бр╕бр╕▓р╕бр╕╡р╕нр╕▒р╕Хр╕гр╕▓р╕Фр╕нр╕Бр╣Ар╕Ър╕╡р╣Йр╕вр╣Ар╕Йр╕ер╕╡р╣Ир╕в 3.8% р╕Хр╣Ир╕нр╕Ыр╕╡ р╕Чр╕╡р╣Ир╕гр╕░р╕Фр╕▒р╕Ър╕Щр╕▒р╕вр╕кр╕│р╕Др╕▒р╕Н 
ЁЭЫ╝ = 0.05
р╣Гр╕лр╣Йр╕Чр╕Фр╕кр╕нр╕Ър╕кр╕бр╕бр╕Хр╕┤р╕Рр╕▓р╕Щр╕зр╣Ир╕▓р╕Др╣Ир╕▓р╣Ар╕Йр╕ер╕╡р╣Ир╕вр╕нр╕▒р╕Хр╕гр╕▓р╕Фр╕нр╕Бр╣Ар╕Ър╕╡р╣Йр╕вр╣Гр╕Щр╕Шр╕Щр╕▓р╕Др╕▓р╕гр╕бр╕▓р╕Бр╕Бр╕зр╣Ир╕▓ 3.5% р╕Хр╣Ир╕нр╕Ыр╕╡
"""
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm

# р╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щ
sample_data = [3.2, 3.5, 3.8, 3.7, 3.6, 
               3.9, 4.0, 3.7, 3.4, 3.6, 
               3.8, 3.5, 3.9, 3.6, 3.8, 
               3.4, 3.6, 3.7, 4.1, 3.9]  # р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕нр╕▒р╕Хр╕гр╕▓р╕Фр╕нр╕Бр╣Ар╕Ър╕╡р╣Йр╕вр╕Ир╕▓р╕Бр╕Шр╕Щр╕▓р╕Др╕▓р╕г 20 р╣Бр╕лр╣Ир╕З
population_mean = 3.5  # р╕Др╣Ир╕▓р╣Ар╕Йр╕ер╕╡р╣Ир╕вр╕Чр╕╡р╣Ир╕нр╣Йр╕▓р╕Зр╕нр╕┤р╕Зр╕Ир╕▓р╕Бр╕Ыр╕гр╕░р╕Кр╕▓р╕Бр╕г


alpha = 0.05  # р╕гр╕░р╕Фр╕▒р╕Ър╕Щр╕▒р╕вр╕кр╕│р╕Др╕▒р╕Н

# Step 1: р╕Др╕│р╕Щр╕зр╕Ур╕Др╣Ир╕▓р╣Ар╕Йр╕ер╕╡р╣Ир╕вр╕Вр╕нр╕Зр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З (sample mean) р╣Бр╕ер╕░р╕Вр╕Щр╕▓р╕Фр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З (sample size)
sample_mean = np.mean(sample_data)
sample_size = len(sample_data)

# р╕Др╕│р╕Щр╕зр╕Ур╕Др╣Ир╕▓р╣Ар╕Ър╕╡р╣Ир╕вр╕Зр╣Ар╕Ър╕Щр╕бр╕▓р╕Хр╕гр╕Рр╕▓р╕Щр╕Вр╕нр╕Зр╕Ыр╕гр╕░р╕Кр╕▓р╕Бр╕г (Population Standard Deviation)
population_std_dev = np.sqrt(np.sum((np.array(sample_data) - sample_mean) ** 2) / len(sample_data))

# Step 2: р╕Др╕│р╕Щр╕зр╕Ур╕Др╣Ир╕▓ z-critical
z_critical = norm.ppf(1 - alpha)  # р╕Др╣Ир╕▓ critical value р╕Вр╕нр╕З z р╕кр╕│р╕лр╕гр╕▒р╕Ъ one-tailed test

# Step 3: р╕Др╕│р╕Щр╕зр╕Ур╕Др╣Ир╕▓ z-test
z_test = (sample_mean - population_mean) / (population_std_dev / np.sqrt(sample_size))

# Step 4: р╣Ар╕Хр╕гр╕╡р╕вр╕бр╕Бр╕гр╕▓р╕Яр╕кр╕│р╕лр╕гр╕▒р╕Ър╣Бр╕кр╕Фр╕Зр╕Ьр╕е
x = np.linspace(-4, 4, 1000)  # р╕кр╕гр╣Йр╕▓р╕Зр╕Кр╣Ир╕зр╕Зр╕Др╣Ир╕▓ z-score
y = norm.pdf(x, 0, 1)  # р╕Др╕│р╕Щр╕зр╕Ур╕Др╣Ир╕▓ density р╕Вр╕нр╕Зр╕Бр╕▓р╕гр╣Бр╕Ир╕Бр╣Бр╕Ир╕Зр╕Ыр╕Бр╕Хр╕┤р╕бр╕▓р╕Хр╕гр╕Рр╕▓р╕Щ

# Plot р╕Бр╕гр╕▓р╕Я
plt.figure(figsize=(10, 6))
plt.plot(x, y, label='Standard Normal Distribution', color='blue')  # р╣Ар╕кр╣Йр╕Щр╕Бр╕гр╕▓р╕Яр╕Бр╕▓р╕гр╣Бр╕Ир╕Бр╣Бр╕Ир╕Зр╕Ыр╕Бр╕Хр╕┤
plt.axvline(z_critical, color='red', linestyle='--', label=f'Critical Value (z = {round(z_critical,2)})')  # р╣Ар╕кр╣Йр╕Щр╕Др╣Ир╕▓р╕зр╕┤р╕Бр╕др╕Х
plt.axvline(z_test, color='green', linestyle='--', label=f'Test Value (z = {round(z_test,2)})')  # р╣Ар╕кр╣Йр╕Щр╕Др╣Ир╕▓р╕Чр╕Фр╕кр╕нр╕Ъ
plt.fill_between(x, y, 0, where=(x > z_critical), color='red', alpha=0.3, label='Rejection Region')  # р╕Юр╕╖р╣Йр╕Щр╕Чр╕╡р╣Ир╕Ыр╕Пр╕┤р╣Ар╕кр╕Ш H0
plt.title('Right-Tailed Z-Test')
plt.xlabel('Z-Score')
plt.ylabel('Probability Density')
plt.legend()
plt.grid()
plt.show()

# Step 5: р╕кр╕гр╕╕р╕Ыр╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М
print("р╕Др╣Ир╕▓р╣Ар╕Йр╕ер╕╡р╣Ир╕вр╕Вр╕нр╕Зр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З (sample mean):", round(sample_mean, 3))
print("р╕Др╣Ир╕▓р╕зр╕┤р╕Бр╕др╕Х (critical value):", round(z_critical, 3))
print("р╕Др╣Ир╕▓р╕Чр╕Фр╕кр╕нр╕Ъ (test value):", round(z_test, 3))

if z_test > z_critical:
    print("р╕кр╕гр╕╕р╕Ы: р╕Ыр╕Пр╕┤р╣Ар╕кр╕Шр╕кр╕бр╕бр╕Хр╕┤р╕Рр╕▓р╕Щр╕зр╣Ир╕▓р╕З (Reject H0) р╣Бр╕ер╕░р╕вр╕нр╕бр╕гр╕▒р╕Ър╕зр╣Ир╕▓р╕Др╣Ир╕▓р╣Ар╕Йр╕ер╕╡р╣Ир╕вр╕нр╕▒р╕Хр╕гр╕▓р╕Фр╕нр╕Бр╣Ар╕Ър╕╡р╣Йр╕вр╕бр╕▓р╕Бр╕Бр╕зр╣Ир╕▓ 3.5%")
else:
    print("р╕кр╕гр╕╕р╕Ы: р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Ыр╕Пр╕┤р╣Ар╕кр╕Шр╕кр╕бр╕бр╕Хр╕┤р╕Рр╕▓р╕Щр╕зр╣Ир╕▓р╕З (Fail to Reject H0)")
